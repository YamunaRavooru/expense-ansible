- name: Configuring backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
  tasks:
  - name: Disable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name:  Enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: Install nodejs 
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - mysql
    - nodejs 
  - name: Create expense user
    ansible.builtin.user:
      name: expense
  - name: creat app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  - name: Install dependencies
    community.general.npm:
      path: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  - name: daemon reload and restart service
    ansible.builtin.systemd_service:
      name: backend
      state: restarted
      daemon_reload: true
      enabled: true
  - name: install libraries
    ansible.builtin.pip:
      name: PyMySQL
      executable: pip3.9
  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      local_user: root
      local_password: "{{ mysql_root_password }}"
      local_host: mysql.daws82s.cloud
      target: /app/schema/backend.sql



